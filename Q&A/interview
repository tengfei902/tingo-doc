1.Introduce yourself
My name is Tengfei,graduated from NorthWest university in 2010. I worked on java background development since 2010.
I worked in baosight software after graduated,worked on development of ERP for Steel industry.
I joint weaver in 2012,mainly worked on product refactor and improvement of performance and stability.
I joint citi in 2014, worked in CRDS team.
I'm now working in lufax,the development of search engin and platform refactor.

2.introduce your last project
Lufax Search engine is based on elasticsearch,used to provide services of full-text search and second level cache.
The elasticsearch servers are deploied on 4 servers, each server has 2 applications.Each node has 1 sharding and 3 replica.
The cluster is managed by zookepper.
The Es Service comprises server side and client side.
The server side connects to ES cluster,publishes restful interfaces to client side.
The client side is an SDK. users can use the SDK to manipulate ES just like database.

The ES service can be divided into several components.
first is es managing. we provides a list of annotations to define a bean index mapping. once the bean changed,the index
and type will adjust according to the change types of the bean.
second is data update, we provide an interface, contains the method updateById,updateRecent,updateAll.users can implement
the interface and filled with their own logics.
third is query service.We provide an interface with serial of query methods.and some assistance to accomplish the functional
programming.
the last is backgroup operation,such as keyword management,field weight in full-text searching,recommend list and so on.

The applications uses jersey to accomplish restful service,mybatis as orm mapping,spring to manage structures.
Database is oracle ,kafka and activeMq are used as message midware, files are now saved on disk, we may plan to transfer to
habse in the future.


3.the field(method) in object

4.the difference between wait and sleep

5.what's hash

6.what's thread safe

7.multi thread

8.exception in java

9.finally

<<<<<<< HEAD
10.what is classloader
to make an object of that class,the jvm that's executing your programs uses a subsystem called a class loader.
The class loader subsystem can actually comprise a chain of class loaders, but thereâ€™s only one primordial class loader,
which is part of the JVM implementation. The primordial class loader loads so-called trusted classes, including Java API
classes, typically from the local disk.
all classes are loaded into jvm dynamically upon the first usage of a class.
This happens when the program makes the first reference to a static member of that class. It turns out that the constructor
is also a static method of a class, even though the static keyword is not used for a constructor. Therefore, creating a new
object of that class using the new operator also counts as a reference to a static member of the class.
class loader can avoid loading unsafe class files.Classes loaded by different parent classLoaders has different namespace,
they cannot refer to each other.

11.JVM parts
comprise ClassLoader,execution Engine,native method interface,native libraries
Memory area contains class area,heap,stack,PC register,native method stack.
execution engine used to execute binary code in PC register.
stack is private to thread,contains variable status during thread running.
pc register contains binary code of class method.
heap comprise young generation and old generation.young generation includes edden and survivor.
each heap has two survivors,one is in use and the other is empty.

12.primitive types
primitive tyoe value is not reference,the variable holds the value directly,and it's placed in stack,so it's much more
efficient.
boolean
byte    16
char    8
short   16
int     32
long    64
float   32
double  64

13.database lock
pessimistic locking
optimistic locking
10.how to accomplish concurrency

11.sleep vs wait

12.what's new in nio

13.

