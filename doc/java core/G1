G1是一种服务器端的垃圾收集器，应用在多处理器和大容量内存环境中。
像CMS收集器一样，能与应用程序线程并发执行。
整理空闲空间更快。
需要GC停顿时间更好预测。
不希望牺牲大量的吞吐性能。
不需要更大的Java Heap。

G1收集器设计的目标是取代CMS收集器，与CMS相比，作出的改进：
1.G1是一个有整理内存过程的垃圾收集器，不会产生很多内存碎片
2.G1的STW更可控,G1在停顿时间上添加了预测机制
G1的概念：
1.Region 传统的GC收集器，内存空间被划分为新生代，老年代，存储逻辑地址是连续的。
G1的存储地址是不连续的，每一代都有n个不连续的大小相同的region
2.SATB
是GC开始时活着的对象的一个快照，作用是维持并发GC的正确性
三色标记算法
3.Rset
在GC的时候，对于old->young,old->old跨代对象引用，只要扫描对应的CSet中的Rset即可。
每个Region都有一个RSet，记录了其他region中对象引用本Region中对象的关系。
而Card table则是一种points-out的结构，每个card覆盖一定返回的heap。
4.Pause prediction Model
停顿预测模型
用户可以设置期望停顿时间

GC过程
1.G1 GC 模式
Young GC
Mixed GC
mixed GC只能回收部分老年代的Region，如果mixed GC实在无法跟上程序分配内存的速度，导致老年代填满无法继续分配新内存，
就会适用serial old gc(full GC).
