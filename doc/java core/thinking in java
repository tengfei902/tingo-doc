Everything is an Object
manipulate Objects with references

reference
String a :create a reference
String a = new String("a"); create an object , and set the reference refers to the object

java storage
1.registers
2.stack
3.heap
4.constant storage
5.Non-RAM storage

primitive types:
new places objects in heap.
primitive tyoe value is not reference,the variable holds the value directly,and it's placed in stack,so it's much more efficient.
boolean
byte    16
char    8
short   16
int     32
long    64
float   32
double  64

wrapper type : allow to make no-primitive type objects in heap to represent that primitive tye values.

Arrays in java

scoping

the method name and the argument list are called method signature

static key word
When you say something is static, it means that particular field or method is not tied to any particular object instance
of that class

Control execution

iteration 循环  while do-while for

comma operator  for(int i=0;i<10;i++)
foreach syntax

break and continue

use label to task instead of goto

switch is sometimes called a selection statement. needs integral type(int ,char,num)

initialization and cleanup

method overloading
different method signature to distinguish overloaded methods.
method signature contains method name and list of argument types

this keyword
used in non-static method

calling constructor from constructor
use this to call another constructor with explicitly arguments list.Constructor call must be first thing to do,
only one constructor can be called in each constructor.

The meaning of static
cannot call a non-static method in a static method.because there is no this on this particular method.

cleanup : finalization and garbage collection
because of garbage collector java has no distructor

how a garbage collector works
scheme 1 : reference counting . it's slow
scheme 2 : any non-dead object must ultimately be traceable back to a reference that lives either on stack or in static
area.The chain might go through multiple several layers . if you start in the stack or the static area,you'll find
all the live objects.

stop-and-copy
mark-and-sweep

access control
public protected default private

Reusing classes
composition and inheritance
Delegation

final keyword
this cannot be changed , for class,method,data

Polymorphism

Interface
A class containing abstract method is called abstract class.

an interface provides a form,no implementations. abstract class can have several method bodies.
interface supports multiple inheritance.abstract class not.

multiple inheritance in java

inner class

java object container
Generics and type-safe containers
generic:It becomes a compiler time error rather than a run time error. Also notice that the cast is no longer necessary.
the JVM kown the type of objects, it will cast to particular type when call the get method.

Collections:
Maps:

ArrayList and LinkedList are both type of List,they both hold elements in the same order in whitch they are inserted,
the difference between the two is : performance for certain manipulation types and

set:only hold the distinct value
HashSet:fasted way to retreive data
TreeSet:sort
LinkedHashSet:keep the objects in order in which they were isnerted.
Map:key-value structure
HashMap
TreeMap
LinkedHashMap

List:
list promise to maintain elements in a particular sequence
ArrayList excels at randomly accessing elements,but is slower when  inserting and removing elements in the midlle of the list.
LinkedList provides optimal sequential access,with inexpensive insertions and deletions from the middle of the list.
is Slow in randomly accessing

Stack
Last in ,first out (LIFO) container

Queue
is First in,first out(FIFO) container

Testing object equivalence

Error Handling with Exceptions
termination and resumption

throwable:
there are two general types of throwable objects.
Error represents compile-time and sytstem errors that you don't worry about catching
exception is the basic type that can be thrown from any of the standard java library class methods and from your method
run-time accident.

finally
checked and unchecked exception

Strings

Type information
Runtime Type Information(RTTI)

to make an object of that class,the jvm that's executing your programs uses a subsystem called a class loader.
The class loader subsystem can actually comprise a chain of class loaders, but there’s only one primordial class loader,
which is part of the JVM implementation. The primordial class loader loads so-called trusted classes, including Java API
classes, typically from the local disk.

all classes are loaded into jvm dynamically upon the first usage of a class.
This happens when the program makes the first reference to a static member of that class. It turns out that the constructor
is also a static method of a class, even though the static keyword is not used for a constructor. Therefore, creating a new
object of that class using the new operator also counts as a reference to a static member of the class.

instanceof

instanceof vs equivalence

reflection:runtime class information
The class Class supports the concept of reflection, along with the java.lang.reflect library which contains the classes
Field, Method, and Constructor (each of which implements the Member interface). Objects of these types are created by the
JVM at run time to represent the corresponding member in the unknown class. You can then use the Constructors to create new
 objects, the get( ) and set( ) methods to read and modify the fields associated with Field objects, and the invoke( )
 method to call a method associated with a Method object.

dynamic proxies
proxy pattern is used to enhance the real object , in order to provide additional or different operations.
There are two approaches, first is to use JDK dynamic proxy case when the target has an interface,second is to use cglib.
In dynamic proxy,the proxy implements from invocationHandler,real object passed in , call the invoke method to execute the
target method.we can call the newProxyInstance in Proxy to get a proxy object.

null objects.



